
==================== FINAL INTERFACE ====================
2018-02-24 20:43:06.5011609 UTC

interface main:Main 8022
  interface hash: 3c816d738b23f62b51136f4c862dd919
  ABI hash: 5e9df5a4cf1dcef3a2729bb5bc21df50
  export-list hash: 17ca1b1d00752eb0089ce2471405e8e7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 49bc03923b6b72218773bcd45aaea9d8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.getALine
  Main.main
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0 jkfso-haskell-0.1.0.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.OldList fdea655c7bec488a3994df222c677ab7
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:GHC.Show 927ef590f679632bf94869e8018e5b48
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  base-4.10.1.0:System.Environment 29b8ecc18446119a33172a40409ab016
import  -/  base-4.10.1.0:System.IO 1fb8f1d116df69c8750950ac088a90e6
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  jkfso-haskell-0.1.0.0:Input 46f4d1b6920570870efd4da2af99945d
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
31e058e3ebfcfc53a810ea16c5e82343
  getALine :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [GHC.Base.String]) ->
                 case ds of wild {
                   [] -> Main.getALine1
                   : aLine linesOfFile -> GHC.Show.$fShow[]_$s$cshow1 aLine }) -}
2865de5ccc865227bb777c9726ff0b7d
  getALine1 :: GHC.Base.String
  {- Strictness: x -}
4a7e940925d04eb5f1b066bd49626fa3
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
2654d366dcc54d22e3adf92d114733c1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ (GHC.Base.Maybe [GHC.Base.String])
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs2
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe [GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.Maybe [GHC.Base.String]>_R)
                        s of ds2 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> case GHC.Environment.getFullArgs1
                             ipv of ds3 { (#,#) ipv2 ipv3 ->
                      Main.main2
                        ipv2
                        (case System.Environment.dropRTSArgs ipv3 of wild1 {
                           [] -> GHC.List.scanl2 @ GHC.Base.String : ds4 xs -> xs }) }
                   GHC.Base.Just argv
                   -> Main.main2 ipv (GHC.List.tail @ GHC.Base.String argv) } }) -}
904de5e4430c3759bf2814833d6f0d6c
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Base.String]
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><L,U>,
     Unfolding: (\ (ipv :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                   (ipv1 :: [GHC.Base.String])[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        (GHC.List.$w!! @ GHC.Base.String ipv1 0#)
                        GHC.IO.IOMode.ReadMode
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv3
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ [GHC.Types.Char]
                           GHC.Show.$fShowChar_$cshowList
                           (Data.OldList.lines ipv5)
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 System.IO.appendFile2
                   @ ()
                   (GHC.List.$w!! @ GHC.IO.FilePath ipv1 1#)
                   GHC.IO.IOMode.WriteMode
                   Main.main3
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   ipv6 } } }) -}
f849a8efaa2e0db37997d3af672605b9
  main3 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2 hdl Main.main4 GHC.Types.False) -}
ffbd91703f79aa003966bca3eafb643f
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main5) -}
e81a005ccad71186a247a00dd7974477
  main5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Solution: A B C D E F G H; Quality: 0"#) -}
92a6874be58a6b5b61707302aba784e1
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

